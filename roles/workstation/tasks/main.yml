---

# - name: add RPMFusion free key
#   ansible.builtin.rpm_key:
#     key: "https://rpmfusion.org/keys?action=AttachFile&do=get&target=RPM-GPG-KEY-rpmfusion-free-fedora-2020"
#     state: present

# - name: add RPMFusion nonfree key
#   ansible.builtin.rpm_key:
#     key: "https://rpmfusion.org/keys?action=AttachFile&do=get&target=RPM-GPG-KEY-rpmfusion-nonfree-fedora-2020"
#     state: present

- name: add RPMFusion free repo
  ansible.builtin.dnf:
    name: "https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-{{ansible_distribution_major_version}}.noarch.rpm"
    state: present

- name: add RPMFusion nonfree repo
  ansible.builtin.dnf:
    name: "https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-{{ansible_distribution_major_version}}.noarch.rpm"
    state: present

### Enable ASUS tools
# - name: Enable asus-linux copr repo
#   community.general.copr:
#     host: copr.fedorainfracloud.org
#     state: enabled
#     name: lukenukem/asus-linux

# - name: Enable gnome-vrr copr repo
#   community.general.copr:
#     host: copr.fedorainfracloud.org
#     state: enabled
#     name: kylegospo/gnome-vrr

### Update packages
- name: update packages
  ansible.builtin.dnf:
    name: '*'
    update_cache: yes
    state: latest

# - name: Install mutter-vrr and gnome-control-center-vrr
#   ansible.builtin.dnf:
#     name:
#       - mutter 
#       - gnome-control-center
#     enablerepo: '_copr_kylegospo-gnome-vrr'
#     state: present

# - name: Install asus-linux tools
#   ansible.builtin.dnf:
#     name:
#       - asusctl
#       - supergfxctl
#     state: latest

# - name: Enable supergfxd
#   ansible.builtin.systemd:
#     name: 'supergfxd'
#     state: started
#     daemon_reload: true
#     enabled: true

      #- name: media codecs
      #  ansible.builtin.command: 'dnf groupupdate multimedia --setop="install_weak_deps=False" --exclude=PackageKit-gstreamer-plugin && dnf groupupdate sound-and-video'

      #- name: browser decoding
  #ansible.builtin.command: 'dnf swap mesa-va-drivers mesa-va-drivers-freeworld'
    #register: decode_one
    # changed_when: decode_one.rc == 0
    
    #- name: more decoding
    # ansible.builtin.command: 'dnf swap mesa-vdpau-drivers mesa-vdpau-drivers-freeworld'
    # register: decode_two
    # changed_when: decode_two.rc == 0

### Install packages

- name: Install DNF packages
  ansible.builtin.dnf:
    name:
      - tmux
      - neovim
      - mpv
      - kernel-devel
      - flatpak
      - cronie
      - cronie-anacron
    state: present
    update_cache: true


### Install github python module

# - name: install github python module
#   ansible.builtin.pip:
#     name:
#       - "github3.py>=1.0.0a3"
#     state: present
#     executable: /usr/bin/pip3

### Install 1Password
- name: Add 1Pass repo key
  ansible.builtin.rpm_key:
    key: "https://downloads.1password.com/linux/keys/1password.asc"
    state: present

- name: Add 1Pass dnf repo
  ansible.builtin.yum_repository:
    name: 1password
    baseurl:
      - "https://downloads.1password.com/linux/rpm/stable/$basearch"
    enabled: true
    gpgcheck: true
    description: "1Password Stable Channel"
    gpgkey:
      - "https://downloads.1password.com/linux/keys/1password.asc"

- name: Install 1Password app
  ansible.builtin.dnf:
    name:
      - '1password'
      - '1password-cli'
    state: present
    update_cache: true

  ### Install LazyVim

- name: Clone LazyVim repo into .config
  ansible.builtin.git:
    repo: https://github.com/LazyVim/starter
    dest: /home/adam/.config/nvim

- name: Remove LazyVim Git folder
  ansible.builtin.file:
    path: /home/adam/.config/nvim/.git
    state: absent

- name: Set up Lazygit copr repo
  community.general.copr:
    host: copr.fedorainfracloud.org
    state: enabled
    name: atim/lazygit

- name: Install Lazygit package
  ansible.builtin.dnf:
    name: 'lazygit'
    state: present
    update_cache: true





# ### Install vscode
#
# - name: Install MS RPM key
#   ansible.builtin.rpm_key:
#     key: "https://packages.microsoft.com/keys/microsoft.asc"
#     state: present
#
# - name: Add MS VSCode RPM repo
#   ansible.builtin.yum_repository:
#     name: vscode
#     baseurl:
#       - "https://packages.microsoft.com/yumrepos/vscode"
#     enabled: true
#     gpgcheck: true
#     description: "VSCode Repo"
#     gpgkey:
#       - "https://packages.microsoft.com/keys/microsoft.asc"
#
# - name: Install vscode packages
#   ansible.builtin.dnf:
#     name: code
#     state: present
#     update_cache: true
#
# ### Install Microsoft Teams
# - name: Add MS Teams RPM Repo
#   ansible.builtin.yum_repository:
#     name: ms-teams
#     baseurl:
#       - "https://packages.microsoft.com/yumrepos/ms-teams"
#     enabled: true
#     gpgcakey: true
#     description: "MS Teams Repo"
#     gpgkey:
#       - "https://packages.microsoft.com/keys/microsoft.asc"
#
# - name: Install MS Teams RPM
#   ansible.builtin.dnf:
#     name: teams
#     state: present
#     update_cache: true

### Install git credential manager

- name: get latest gcm core binary version
  ansible.builtin.uri:
    url: 'https://api.github.com/repos/git-ecosystem/git-credential-manager/releases/latest'
    return_content: true
  register: gcm_latest

- name: "Download GCM {{ gcm_latest.json.tag_name }}"
  loop: "{{ gcm_latest.json.assets }}"
  when: "'linux_amd64' is in item.name AND 'symbols' is not in item.name"
  ansible.builtin.unarchive:
    remote_src: yes
    src: "{{ item.browser_download_url }}"
    dest: '/usr/local/bin'
    keep_newer: yes
    extra_opts:
      - --strip=1
      - --no-anchored

- name: Configure GCM Core
  become_user: adam
  ansible.builtin.command:
    cmd: git-credential-manager configure

### Install Flathub

# - name: Install Flathub for users
#   community.general.flatpak_remote:
#     name: flathub-org
#     flatpakrepo_url: "https://dl.flathub.org/repo/flathub.flatpakrepo"
#     state: present
#     method: system   

### Install most-used Flatpaks

- name: Install Desktop Flatpaks
  become_user: adam
  community.general.flatpak:
    name:
      - org.telegram.desktop
      - com.discordapp.Discord
      - com.mattermost.Desktop
      - us.zoom.Zoom
      - com.valvesoftware.Steam
      - com.obsproject.Studio
      - com.obsproject.Studio.Plugin.OBSVkCapture
      - org.freedesktop.Platform.VulkanLayer.OBSVkCapture/x86_64/22.08
    state: present
    remote: flathub-org

### Set mpv config

- name: create mpv config directory
  become_user: adam
  ansible.builtin.file:
    path: "~/.config/mpv/"
    owner: adam
    group: adam
    state: directory
    mode: '0755'

- name: Set HWDEC in mpv config
  become_user: adam
  ansible.builtin.template:
    src: "mpv.conf.j2"
    dest: "~/.config/mpv/mpv.conf"

### Set wallpaper

# - name: Copy wallpaper
#   ansible.builtin.copy:
#     src: "wallpaper.jpg"
#     dest: /usr/share/backgrounds/ansible-wallpaper.jpg
#     owner: root
#     group: root

# - name: Set light wallpaper
#   become_user: adam
#   ansible.builtin.dconf:
#     key: "/org/gnome/desktop/background/picture-uri"
#     value: "'file:///usr/share/backgrounds/ansible-wallpaper.jpg'"

# - name: Set dark wallpaper
#   become_user: adam
#   ansible.builtin.dconf:
#     key: "/org/gnome/desktop/background/picture-uri-dark"
#     value: "'file:///usr/share/backgrounds/ansible-wallpaper.jpg'"

# - name: set wallpaper position
#   become_user: adam
#   ansible.builtin.dconf:
#     key: "/org/gnome/desktop/background/picture-options"
#     value: "'zoom'"

#   ### Add ansible-pull automation
#
# - name: add ansible user
#   user:
#     name: velociraptor
#     system: yes
#
# - name: set up sudo for ansible user
#   copy:
#     src: sudoer_velociraptor
#     dest: /etc/sudoers.d/velociraptor
#     owner: root
#     group: root
#     mode: 0440
#
# - name: add ansible-pull cron job
#   cron:
#     name: ansible auto-provision
#     user: velociraptor
#     minute: "*/10"
#     job: ansible-pull -o -U https://github.com/argrubbs/ansible_desktop.git
